//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 

namespace WSH.CodeBuilder.DispatchServers
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "CodeBuilderService", Namespace = "http://wsh.codebuilderinterface/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Entity))]
    public partial class CodeBuilderService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GetProjectDataTableOperationCompleted;

        private System.Threading.SendOrPostCallback GetProjectListOperationCompleted;

        private System.Threading.SendOrPostCallback GetProjectByIdOperationCompleted;

        private System.Threading.SendOrPostCallback AddProjectOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateProjectOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteProjectOperationCompleted;

        private System.Threading.SendOrPostCallback GetTableDataTableOperationCompleted;

        private System.Threading.SendOrPostCallback GetTableListOperationCompleted;

        private System.Threading.SendOrPostCallback GetTableByIdOperationCompleted;

        private System.Threading.SendOrPostCallback GetTableByNameOperationCompleted;

        private System.Threading.SendOrPostCallback ExistsTableNameOperationCompleted;

        private System.Threading.SendOrPostCallback AddTableOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateTableOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteTableOperationCompleted;

        private System.Threading.SendOrPostCallback GetColumnDataTableOperationCompleted;

        private System.Threading.SendOrPostCallback GetColumnListOperationCompleted;

        private System.Threading.SendOrPostCallback BatchUpdateColumnOperationCompleted;

        private System.Threading.SendOrPostCallback AddColumnOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateColumnOperationCompleted;

        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;

        private System.Threading.SendOrPostCallback GetUserDataTableOperationCompleted;

        private System.Threading.SendOrPostCallback GetUserListOperationCompleted;

        private System.Threading.SendOrPostCallback BatchUpdateUserOperationCompleted;

        private System.Threading.SendOrPostCallback AddUserOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;

        private System.Threading.SendOrPostCallback ExistsUserOperationCompleted;

        private System.Threading.SendOrPostCallback GetTemplateDataTableOperationCompleted;

        private System.Threading.SendOrPostCallback GetTemplateListOperationCompleted;

        private System.Threading.SendOrPostCallback GetTemplateByIdOperationCompleted;

        private System.Threading.SendOrPostCallback AddTemplateOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateTemplateOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteTemplateOperationCompleted;

        private System.Threading.SendOrPostCallback GetConnectionDataTableOperationCompleted;

        private System.Threading.SendOrPostCallback GetConnectionListOperationCompleted;

        private System.Threading.SendOrPostCallback GetConnectionByIdOperationCompleted;

        private System.Threading.SendOrPostCallback BatchUpdateConnectionOperationCompleted;

        private System.Threading.SendOrPostCallback AddConnectionOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateConnectionOperationCompleted;

        private System.Threading.SendOrPostCallback GetDictDataTableOperationCompleted;

        private System.Threading.SendOrPostCallback GetDictListOperationCompleted;

        private System.Threading.SendOrPostCallback GetDictByCodeOperationCompleted;

        private System.Threading.SendOrPostCallback BatchUpdateDictOperationCompleted;

        private System.Threading.SendOrPostCallback AddDictOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateDictOperationCompleted;

        /// <remarks/>
        public CodeBuilderService()
        {
            this.Url = "http://shwang-pc:81/CodeBuilderService.svc/CodeBuilderService";
        }

        /// <remarks/>
        public event GetProjectDataTableCompletedEventHandler GetProjectDataTableCompleted;

        /// <remarks/>
        public event GetProjectListCompletedEventHandler GetProjectListCompleted;

        /// <remarks/>
        public event GetProjectByIdCompletedEventHandler GetProjectByIdCompleted;

        /// <remarks/>
        public event AddProjectCompletedEventHandler AddProjectCompleted;

        /// <remarks/>
        public event UpdateProjectCompletedEventHandler UpdateProjectCompleted;

        /// <remarks/>
        public event DeleteProjectCompletedEventHandler DeleteProjectCompleted;

        /// <remarks/>
        public event GetTableDataTableCompletedEventHandler GetTableDataTableCompleted;

        /// <remarks/>
        public event GetTableListCompletedEventHandler GetTableListCompleted;

        /// <remarks/>
        public event GetTableByIdCompletedEventHandler GetTableByIdCompleted;

        /// <remarks/>
        public event GetTableByNameCompletedEventHandler GetTableByNameCompleted;

        /// <remarks/>
        public event ExistsTableNameCompletedEventHandler ExistsTableNameCompleted;

        /// <remarks/>
        public event AddTableCompletedEventHandler AddTableCompleted;

        /// <remarks/>
        public event UpdateTableCompletedEventHandler UpdateTableCompleted;

        /// <remarks/>
        public event DeleteTableCompletedEventHandler DeleteTableCompleted;

        /// <remarks/>
        public event GetColumnDataTableCompletedEventHandler GetColumnDataTableCompleted;

        /// <remarks/>
        public event GetColumnListCompletedEventHandler GetColumnListCompleted;

        /// <remarks/>
        public event BatchUpdateColumnCompletedEventHandler BatchUpdateColumnCompleted;

        /// <remarks/>
        public event AddColumnCompletedEventHandler AddColumnCompleted;

        /// <remarks/>
        public event UpdateColumnCompletedEventHandler UpdateColumnCompleted;

        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;

        /// <remarks/>
        public event GetUserDataTableCompletedEventHandler GetUserDataTableCompleted;

        /// <remarks/>
        public event GetUserListCompletedEventHandler GetUserListCompleted;

        /// <remarks/>
        public event BatchUpdateUserCompletedEventHandler BatchUpdateUserCompleted;

        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;

        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;

        /// <remarks/>
        public event ExistsUserCompletedEventHandler ExistsUserCompleted;

        /// <remarks/>
        public event GetTemplateDataTableCompletedEventHandler GetTemplateDataTableCompleted;

        /// <remarks/>
        public event GetTemplateListCompletedEventHandler GetTemplateListCompleted;

        /// <remarks/>
        public event GetTemplateByIdCompletedEventHandler GetTemplateByIdCompleted;

        /// <remarks/>
        public event AddTemplateCompletedEventHandler AddTemplateCompleted;

        /// <remarks/>
        public event UpdateTemplateCompletedEventHandler UpdateTemplateCompleted;

        /// <remarks/>
        public event DeleteTemplateCompletedEventHandler DeleteTemplateCompleted;

        /// <remarks/>
        public event GetConnectionDataTableCompletedEventHandler GetConnectionDataTableCompleted;

        /// <remarks/>
        public event GetConnectionListCompletedEventHandler GetConnectionListCompleted;

        /// <remarks/>
        public event GetConnectionByIdCompletedEventHandler GetConnectionByIdCompleted;

        /// <remarks/>
        public event BatchUpdateConnectionCompletedEventHandler BatchUpdateConnectionCompleted;

        /// <remarks/>
        public event AddConnectionCompletedEventHandler AddConnectionCompleted;

        /// <remarks/>
        public event UpdateConnectionCompletedEventHandler UpdateConnectionCompleted;

        /// <remarks/>
        public event GetDictDataTableCompletedEventHandler GetDictDataTableCompleted;

        /// <remarks/>
        public event GetDictListCompletedEventHandler GetDictListCompleted;

        /// <remarks/>
        public event GetDictByCodeCompletedEventHandler GetDictByCodeCompleted;

        /// <remarks/>
        public event BatchUpdateDictCompletedEventHandler BatchUpdateDictCompleted;

        /// <remarks/>
        public event AddDictCompletedEventHandler AddDictCompleted;

        /// <remarks/>
        public event UpdateDictCompletedEventHandler UpdateDictCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetProjectDataTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProjectDataTable()
        {
            object[] results = this.Invoke("GetProjectDataTable", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetProjectDataTable(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetProjectDataTable", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetProjectDataTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetProjectDataTableAsync()
        {
            this.GetProjectDataTableAsync(null);
        }

        /// <remarks/>
        public void GetProjectDataTableAsync(object userState)
        {
            if ((this.GetProjectDataTableOperationCompleted == null))
            {
                this.GetProjectDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectDataTableOperationCompleted);
            }
            this.InvokeAsync("GetProjectDataTable", new object[0], this.GetProjectDataTableOperationCompleted, userState);
        }

        private void OnGetProjectDataTableOperationCompleted(object arg)
        {
            if ((this.GetProjectDataTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectDataTableCompleted(this, new GetProjectDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetProjectList", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectEntity[] GetProjectList()
        {
            object[] results = this.Invoke("GetProjectList", new object[0]);
            return ((ProjectEntity[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetProjectList(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetProjectList", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public ProjectEntity[] EndGetProjectList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProjectEntity[])(results[0]));
        }

        /// <remarks/>
        public void GetProjectListAsync()
        {
            this.GetProjectListAsync(null);
        }

        /// <remarks/>
        public void GetProjectListAsync(object userState)
        {
            if ((this.GetProjectListOperationCompleted == null))
            {
                this.GetProjectListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectListOperationCompleted);
            }
            this.InvokeAsync("GetProjectList", new object[0], this.GetProjectListOperationCompleted, userState);
        }

        private void OnGetProjectListOperationCompleted(object arg)
        {
            if ((this.GetProjectListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectListCompleted(this, new GetProjectListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetProjectById", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectEntity GetProjectById(string projectID)
        {
            object[] results = this.Invoke("GetProjectById", new object[] {
                    projectID});
            return ((ProjectEntity)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetProjectById(string projectID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetProjectById", new object[] {
                    projectID}, callback, asyncState);
        }

        /// <remarks/>
        public ProjectEntity EndGetProjectById(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProjectEntity)(results[0]));
        }

        /// <remarks/>
        public void GetProjectByIdAsync(string projectID)
        {
            this.GetProjectByIdAsync(projectID, null);
        }

        /// <remarks/>
        public void GetProjectByIdAsync(string projectID, object userState)
        {
            if ((this.GetProjectByIdOperationCompleted == null))
            {
                this.GetProjectByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectByIdOperationCompleted);
            }
            this.InvokeAsync("GetProjectById", new object[] {
                    projectID}, this.GetProjectByIdOperationCompleted, userState);
        }

        private void OnGetProjectByIdOperationCompleted(object arg)
        {
            if ((this.GetProjectByIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectByIdCompleted(this, new GetProjectByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/AddProject", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddProject(ProjectEntity projectEntity)
        {
            object[] results = this.Invoke("AddProject", new object[] {
                    projectEntity});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddProject(ProjectEntity projectEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddProject", new object[] {
                    projectEntity}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddProject(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddProjectAsync(ProjectEntity projectEntity)
        {
            this.AddProjectAsync(projectEntity, null);
        }

        /// <remarks/>
        public void AddProjectAsync(ProjectEntity projectEntity, object userState)
        {
            if ((this.AddProjectOperationCompleted == null))
            {
                this.AddProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProjectOperationCompleted);
            }
            this.InvokeAsync("AddProject", new object[] {
                    projectEntity}, this.AddProjectOperationCompleted, userState);
        }

        private void OnAddProjectOperationCompleted(object arg)
        {
            if ((this.AddProjectCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProjectCompleted(this, new AddProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/UpdateProject", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProject(ProjectEntity projectEntity)
        {
            object[] results = this.Invoke("UpdateProject", new object[] {
                    projectEntity});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateProject(ProjectEntity projectEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateProject", new object[] {
                    projectEntity}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateProject(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateProjectAsync(ProjectEntity projectEntity)
        {
            this.UpdateProjectAsync(projectEntity, null);
        }

        /// <remarks/>
        public void UpdateProjectAsync(ProjectEntity projectEntity, object userState)
        {
            if ((this.UpdateProjectOperationCompleted == null))
            {
                this.UpdateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProjectOperationCompleted);
            }
            this.InvokeAsync("UpdateProject", new object[] {
                    projectEntity}, this.UpdateProjectOperationCompleted, userState);
        }

        private void OnUpdateProjectOperationCompleted(object arg)
        {
            if ((this.UpdateProjectCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProjectCompleted(this, new UpdateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/DeleteProject", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProject(string projectID)
        {
            object[] results = this.Invoke("DeleteProject", new object[] {
                    projectID});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteProject(string projectID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteProject", new object[] {
                    projectID}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndDeleteProject(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void DeleteProjectAsync(string projectID)
        {
            this.DeleteProjectAsync(projectID, null);
        }

        /// <remarks/>
        public void DeleteProjectAsync(string projectID, object userState)
        {
            if ((this.DeleteProjectOperationCompleted == null))
            {
                this.DeleteProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProjectOperationCompleted);
            }
            this.InvokeAsync("DeleteProject", new object[] {
                    projectID}, this.DeleteProjectOperationCompleted, userState);
        }

        private void OnDeleteProjectOperationCompleted(object arg)
        {
            if ((this.DeleteProjectCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProjectCompleted(this, new DeleteProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetTableDataTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTableDataTable(string projectId)
        {
            object[] results = this.Invoke("GetTableDataTable", new object[] {
                    projectId});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTableDataTable(string projectId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTableDataTable", new object[] {
                    projectId}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetTableDataTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetTableDataTableAsync(string projectId)
        {
            this.GetTableDataTableAsync(projectId, null);
        }

        /// <remarks/>
        public void GetTableDataTableAsync(string projectId, object userState)
        {
            if ((this.GetTableDataTableOperationCompleted == null))
            {
                this.GetTableDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableDataTableOperationCompleted);
            }
            this.InvokeAsync("GetTableDataTable", new object[] {
                    projectId}, this.GetTableDataTableOperationCompleted, userState);
        }

        private void OnGetTableDataTableOperationCompleted(object arg)
        {
            if ((this.GetTableDataTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableDataTableCompleted(this, new GetTableDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetTableList", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TableEntity[] GetTableList(string projectId)
        {
            object[] results = this.Invoke("GetTableList", new object[] {
                    projectId});
            return ((TableEntity[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTableList(string projectId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTableList", new object[] {
                    projectId}, callback, asyncState);
        }

        /// <remarks/>
        public TableEntity[] EndGetTableList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TableEntity[])(results[0]));
        }

        /// <remarks/>
        public void GetTableListAsync(string projectId)
        {
            this.GetTableListAsync(projectId, null);
        }

        /// <remarks/>
        public void GetTableListAsync(string projectId, object userState)
        {
            if ((this.GetTableListOperationCompleted == null))
            {
                this.GetTableListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableListOperationCompleted);
            }
            this.InvokeAsync("GetTableList", new object[] {
                    projectId}, this.GetTableListOperationCompleted, userState);
        }

        private void OnGetTableListOperationCompleted(object arg)
        {
            if ((this.GetTableListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableListCompleted(this, new GetTableListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetTableById", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TableEntity GetTableById(string tableId)
        {
            object[] results = this.Invoke("GetTableById", new object[] {
                    tableId});
            return ((TableEntity)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTableById(string tableId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTableById", new object[] {
                    tableId}, callback, asyncState);
        }

        /// <remarks/>
        public TableEntity EndGetTableById(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TableEntity)(results[0]));
        }

        /// <remarks/>
        public void GetTableByIdAsync(string tableId)
        {
            this.GetTableByIdAsync(tableId, null);
        }

        /// <remarks/>
        public void GetTableByIdAsync(string tableId, object userState)
        {
            if ((this.GetTableByIdOperationCompleted == null))
            {
                this.GetTableByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableByIdOperationCompleted);
            }
            this.InvokeAsync("GetTableById", new object[] {
                    tableId}, this.GetTableByIdOperationCompleted, userState);
        }

        private void OnGetTableByIdOperationCompleted(object arg)
        {
            if ((this.GetTableByIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableByIdCompleted(this, new GetTableByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetTableByName", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TableEntity GetTableByName(string projectId, string tableName)
        {
            object[] results = this.Invoke("GetTableByName", new object[] {
                    projectId,
                    tableName});
            return ((TableEntity)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTableByName(string projectId, string tableName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTableByName", new object[] {
                    projectId,
                    tableName}, callback, asyncState);
        }

        /// <remarks/>
        public TableEntity EndGetTableByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TableEntity)(results[0]));
        }

        /// <remarks/>
        public void GetTableByNameAsync(string projectId, string tableName)
        {
            this.GetTableByNameAsync(projectId, tableName, null);
        }

        /// <remarks/>
        public void GetTableByNameAsync(string projectId, string tableName, object userState)
        {
            if ((this.GetTableByNameOperationCompleted == null))
            {
                this.GetTableByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableByNameOperationCompleted);
            }
            this.InvokeAsync("GetTableByName", new object[] {
                    projectId,
                    tableName}, this.GetTableByNameOperationCompleted, userState);
        }

        private void OnGetTableByNameOperationCompleted(object arg)
        {
            if ((this.GetTableByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableByNameCompleted(this, new GetTableByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/ExistsTableName", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsTableName(string tableName, string projectID, string id)
        {
            object[] results = this.Invoke("ExistsTableName", new object[] {
                    tableName,
                    projectID,
                    id});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginExistsTableName(string tableName, string projectID, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ExistsTableName", new object[] {
                    tableName,
                    projectID,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndExistsTableName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ExistsTableNameAsync(string tableName, string projectID, string id)
        {
            this.ExistsTableNameAsync(tableName, projectID, id, null);
        }

        /// <remarks/>
        public void ExistsTableNameAsync(string tableName, string projectID, string id, object userState)
        {
            if ((this.ExistsTableNameOperationCompleted == null))
            {
                this.ExistsTableNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsTableNameOperationCompleted);
            }
            this.InvokeAsync("ExistsTableName", new object[] {
                    tableName,
                    projectID,
                    id}, this.ExistsTableNameOperationCompleted, userState);
        }

        private void OnExistsTableNameOperationCompleted(object arg)
        {
            if ((this.ExistsTableNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsTableNameCompleted(this, new ExistsTableNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/AddTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTable(TableEntity tableEntity)
        {
            object[] results = this.Invoke("AddTable", new object[] {
                    tableEntity});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddTable(TableEntity tableEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddTable", new object[] {
                    tableEntity}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddTableAsync(TableEntity tableEntity)
        {
            this.AddTableAsync(tableEntity, null);
        }

        /// <remarks/>
        public void AddTableAsync(TableEntity tableEntity, object userState)
        {
            if ((this.AddTableOperationCompleted == null))
            {
                this.AddTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTableOperationCompleted);
            }
            this.InvokeAsync("AddTable", new object[] {
                    tableEntity}, this.AddTableOperationCompleted, userState);
        }

        private void OnAddTableOperationCompleted(object arg)
        {
            if ((this.AddTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTableCompleted(this, new AddTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/UpdateTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTable(TableEntity tableEntity)
        {
            object[] results = this.Invoke("UpdateTable", new object[] {
                    tableEntity});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateTable(TableEntity tableEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateTable", new object[] {
                    tableEntity}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateTableAsync(TableEntity tableEntity)
        {
            this.UpdateTableAsync(tableEntity, null);
        }

        /// <remarks/>
        public void UpdateTableAsync(TableEntity tableEntity, object userState)
        {
            if ((this.UpdateTableOperationCompleted == null))
            {
                this.UpdateTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTableOperationCompleted);
            }
            this.InvokeAsync("UpdateTable", new object[] {
                    tableEntity}, this.UpdateTableOperationCompleted, userState);
        }

        private void OnUpdateTableOperationCompleted(object arg)
        {
            if ((this.UpdateTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTableCompleted(this, new UpdateTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/DeleteTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTable(string tableId)
        {
            object[] results = this.Invoke("DeleteTable", new object[] {
                    tableId});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteTable(string tableId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteTable", new object[] {
                    tableId}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndDeleteTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void DeleteTableAsync(string tableId)
        {
            this.DeleteTableAsync(tableId, null);
        }

        /// <remarks/>
        public void DeleteTableAsync(string tableId, object userState)
        {
            if ((this.DeleteTableOperationCompleted == null))
            {
                this.DeleteTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTableOperationCompleted);
            }
            this.InvokeAsync("DeleteTable", new object[] {
                    tableId}, this.DeleteTableOperationCompleted, userState);
        }

        private void OnDeleteTableOperationCompleted(object arg)
        {
            if ((this.DeleteTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTableCompleted(this, new DeleteTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetColumnDataTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetColumnDataTable(string tableId)
        {
            object[] results = this.Invoke("GetColumnDataTable", new object[] {
                    tableId});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetColumnDataTable(string tableId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetColumnDataTable", new object[] {
                    tableId}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetColumnDataTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetColumnDataTableAsync(string tableId)
        {
            this.GetColumnDataTableAsync(tableId, null);
        }

        /// <remarks/>
        public void GetColumnDataTableAsync(string tableId, object userState)
        {
            if ((this.GetColumnDataTableOperationCompleted == null))
            {
                this.GetColumnDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColumnDataTableOperationCompleted);
            }
            this.InvokeAsync("GetColumnDataTable", new object[] {
                    tableId}, this.GetColumnDataTableOperationCompleted, userState);
        }

        private void OnGetColumnDataTableOperationCompleted(object arg)
        {
            if ((this.GetColumnDataTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetColumnDataTableCompleted(this, new GetColumnDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetColumnList", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ColumnEntity[] GetColumnList(string tableId)
        {
            object[] results = this.Invoke("GetColumnList", new object[] {
                    tableId});
            return ((ColumnEntity[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetColumnList(string tableId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetColumnList", new object[] {
                    tableId}, callback, asyncState);
        }

        /// <remarks/>
        public ColumnEntity[] EndGetColumnList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ColumnEntity[])(results[0]));
        }

        /// <remarks/>
        public void GetColumnListAsync(string tableId)
        {
            this.GetColumnListAsync(tableId, null);
        }

        /// <remarks/>
        public void GetColumnListAsync(string tableId, object userState)
        {
            if ((this.GetColumnListOperationCompleted == null))
            {
                this.GetColumnListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColumnListOperationCompleted);
            }
            this.InvokeAsync("GetColumnList", new object[] {
                    tableId}, this.GetColumnListOperationCompleted, userState);
        }

        private void OnGetColumnListOperationCompleted(object arg)
        {
            if ((this.GetColumnListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetColumnListCompleted(this, new GetColumnListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/BatchUpdateColumn", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchUpdateColumn(System.Data.DataTable dt, string tableID)
        {
            object[] results = this.Invoke("BatchUpdateColumn", new object[] {
                    dt,
                    tableID});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBatchUpdateColumn(System.Data.DataTable dt, string tableID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BatchUpdateColumn", new object[] {
                    dt,
                    tableID}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBatchUpdateColumn(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BatchUpdateColumnAsync(System.Data.DataTable dt, string tableID)
        {
            this.BatchUpdateColumnAsync(dt, tableID, null);
        }

        /// <remarks/>
        public void BatchUpdateColumnAsync(System.Data.DataTable dt, string tableID, object userState)
        {
            if ((this.BatchUpdateColumnOperationCompleted == null))
            {
                this.BatchUpdateColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUpdateColumnOperationCompleted);
            }
            this.InvokeAsync("BatchUpdateColumn", new object[] {
                    dt,
                    tableID}, this.BatchUpdateColumnOperationCompleted, userState);
        }

        private void OnBatchUpdateColumnOperationCompleted(object arg)
        {
            if ((this.BatchUpdateColumnCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUpdateColumnCompleted(this, new BatchUpdateColumnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/AddColumn", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddColumn(ColumnEntity columnEntity)
        {
            object[] results = this.Invoke("AddColumn", new object[] {
                    columnEntity});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddColumn(ColumnEntity columnEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddColumn", new object[] {
                    columnEntity}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddColumn(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddColumnAsync(ColumnEntity columnEntity)
        {
            this.AddColumnAsync(columnEntity, null);
        }

        /// <remarks/>
        public void AddColumnAsync(ColumnEntity columnEntity, object userState)
        {
            if ((this.AddColumnOperationCompleted == null))
            {
                this.AddColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddColumnOperationCompleted);
            }
            this.InvokeAsync("AddColumn", new object[] {
                    columnEntity}, this.AddColumnOperationCompleted, userState);
        }

        private void OnAddColumnOperationCompleted(object arg)
        {
            if ((this.AddColumnCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddColumnCompleted(this, new AddColumnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/UpdateColumn", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateColumn(ColumnEntity columnEntity)
        {
            object[] results = this.Invoke("UpdateColumn", new object[] {
                    columnEntity});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateColumn(ColumnEntity columnEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateColumn", new object[] {
                    columnEntity}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateColumn(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateColumnAsync(ColumnEntity columnEntity)
        {
            this.UpdateColumnAsync(columnEntity, null);
        }

        /// <remarks/>
        public void UpdateColumnAsync(ColumnEntity columnEntity, object userState)
        {
            if ((this.UpdateColumnOperationCompleted == null))
            {
                this.UpdateColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateColumnOperationCompleted);
            }
            this.InvokeAsync("UpdateColumn", new object[] {
                    columnEntity}, this.UpdateColumnOperationCompleted, userState);
        }

        private void OnUpdateColumnOperationCompleted(object arg)
        {
            if ((this.UpdateColumnCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateColumnCompleted(this, new UpdateColumnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetUserInfo", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfoEntity GetUserInfo(UserInfoEntity userInfo)
        {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                    userInfo});
            return ((UserInfoEntity)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUserInfo(UserInfoEntity userInfo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserInfo", new object[] {
                    userInfo}, callback, asyncState);
        }

        /// <remarks/>
        public UserInfoEntity EndGetUserInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserInfoEntity)(results[0]));
        }

        /// <remarks/>
        public void GetUserInfoAsync(UserInfoEntity userInfo)
        {
            this.GetUserInfoAsync(userInfo, null);
        }

        /// <remarks/>
        public void GetUserInfoAsync(UserInfoEntity userInfo, object userState)
        {
            if ((this.GetUserInfoOperationCompleted == null))
            {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                    userInfo}, this.GetUserInfoOperationCompleted, userState);
        }

        private void OnGetUserInfoOperationCompleted(object arg)
        {
            if ((this.GetUserInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetUserDataTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserDataTable()
        {
            object[] results = this.Invoke("GetUserDataTable", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUserDataTable(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserDataTable", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetUserDataTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetUserDataTableAsync()
        {
            this.GetUserDataTableAsync(null);
        }

        /// <remarks/>
        public void GetUserDataTableAsync(object userState)
        {
            if ((this.GetUserDataTableOperationCompleted == null))
            {
                this.GetUserDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDataTableOperationCompleted);
            }
            this.InvokeAsync("GetUserDataTable", new object[0], this.GetUserDataTableOperationCompleted, userState);
        }

        private void OnGetUserDataTableOperationCompleted(object arg)
        {
            if ((this.GetUserDataTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDataTableCompleted(this, new GetUserDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetUserList", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfoEntity[] GetUserList()
        {
            object[] results = this.Invoke("GetUserList", new object[0]);
            return ((UserInfoEntity[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUserList(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserList", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public UserInfoEntity[] EndGetUserList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserInfoEntity[])(results[0]));
        }

        /// <remarks/>
        public void GetUserListAsync()
        {
            this.GetUserListAsync(null);
        }

        /// <remarks/>
        public void GetUserListAsync(object userState)
        {
            if ((this.GetUserListOperationCompleted == null))
            {
                this.GetUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListOperationCompleted);
            }
            this.InvokeAsync("GetUserList", new object[0], this.GetUserListOperationCompleted, userState);
        }

        private void OnGetUserListOperationCompleted(object arg)
        {
            if ((this.GetUserListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/BatchUpdateUser", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchUpdateUser(System.Data.DataTable dt)
        {
            object[] results = this.Invoke("BatchUpdateUser", new object[] {
                    dt});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBatchUpdateUser(System.Data.DataTable dt, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BatchUpdateUser", new object[] {
                    dt}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBatchUpdateUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BatchUpdateUserAsync(System.Data.DataTable dt)
        {
            this.BatchUpdateUserAsync(dt, null);
        }

        /// <remarks/>
        public void BatchUpdateUserAsync(System.Data.DataTable dt, object userState)
        {
            if ((this.BatchUpdateUserOperationCompleted == null))
            {
                this.BatchUpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUpdateUserOperationCompleted);
            }
            this.InvokeAsync("BatchUpdateUser", new object[] {
                    dt}, this.BatchUpdateUserOperationCompleted, userState);
        }

        private void OnBatchUpdateUserOperationCompleted(object arg)
        {
            if ((this.BatchUpdateUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUpdateUserCompleted(this, new BatchUpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/AddUser", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUser(UserInfoEntity userEntity)
        {
            object[] results = this.Invoke("AddUser", new object[] {
                    userEntity});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddUser(UserInfoEntity userEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddUser", new object[] {
                    userEntity}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddUserAsync(UserInfoEntity userEntity)
        {
            this.AddUserAsync(userEntity, null);
        }

        /// <remarks/>
        public void AddUserAsync(UserInfoEntity userEntity, object userState)
        {
            if ((this.AddUserOperationCompleted == null))
            {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                    userEntity}, this.AddUserOperationCompleted, userState);
        }

        private void OnAddUserOperationCompleted(object arg)
        {
            if ((this.AddUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/UpdateUser", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUser(UserInfoEntity userEntity)
        {
            object[] results = this.Invoke("UpdateUser", new object[] {
                    userEntity});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateUser(UserInfoEntity userEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateUser", new object[] {
                    userEntity}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateUserAsync(UserInfoEntity userEntity)
        {
            this.UpdateUserAsync(userEntity, null);
        }

        /// <remarks/>
        public void UpdateUserAsync(UserInfoEntity userEntity, object userState)
        {
            if ((this.UpdateUserOperationCompleted == null))
            {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                    userEntity}, this.UpdateUserOperationCompleted, userState);
        }

        private void OnUpdateUserOperationCompleted(object arg)
        {
            if ((this.UpdateUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/ExistsUser", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsUser(UserInfoEntity userEntity)
        {
            object[] results = this.Invoke("ExistsUser", new object[] {
                    userEntity});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginExistsUser(UserInfoEntity userEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ExistsUser", new object[] {
                    userEntity}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndExistsUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ExistsUserAsync(UserInfoEntity userEntity)
        {
            this.ExistsUserAsync(userEntity, null);
        }

        /// <remarks/>
        public void ExistsUserAsync(UserInfoEntity userEntity, object userState)
        {
            if ((this.ExistsUserOperationCompleted == null))
            {
                this.ExistsUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsUserOperationCompleted);
            }
            this.InvokeAsync("ExistsUser", new object[] {
                    userEntity}, this.ExistsUserOperationCompleted, userState);
        }

        private void OnExistsUserOperationCompleted(object arg)
        {
            if ((this.ExistsUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsUserCompleted(this, new ExistsUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetTemplateDataTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTemplateDataTable(string parentid)
        {
            object[] results = this.Invoke("GetTemplateDataTable", new object[] {
                    parentid});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTemplateDataTable(string parentid, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTemplateDataTable", new object[] {
                    parentid}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetTemplateDataTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetTemplateDataTableAsync(string parentid)
        {
            this.GetTemplateDataTableAsync(parentid, null);
        }

        /// <remarks/>
        public void GetTemplateDataTableAsync(string parentid, object userState)
        {
            if ((this.GetTemplateDataTableOperationCompleted == null))
            {
                this.GetTemplateDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateDataTableOperationCompleted);
            }
            this.InvokeAsync("GetTemplateDataTable", new object[] {
                    parentid}, this.GetTemplateDataTableOperationCompleted, userState);
        }

        private void OnGetTemplateDataTableOperationCompleted(object arg)
        {
            if ((this.GetTemplateDataTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateDataTableCompleted(this, new GetTemplateDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetTemplateList", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TemplateEntity[] GetTemplateList(string parentid)
        {
            object[] results = this.Invoke("GetTemplateList", new object[] {
                    parentid});
            return ((TemplateEntity[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTemplateList(string parentid, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTemplateList", new object[] {
                    parentid}, callback, asyncState);
        }

        /// <remarks/>
        public TemplateEntity[] EndGetTemplateList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TemplateEntity[])(results[0]));
        }

        /// <remarks/>
        public void GetTemplateListAsync(string parentid)
        {
            this.GetTemplateListAsync(parentid, null);
        }

        /// <remarks/>
        public void GetTemplateListAsync(string parentid, object userState)
        {
            if ((this.GetTemplateListOperationCompleted == null))
            {
                this.GetTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateListOperationCompleted);
            }
            this.InvokeAsync("GetTemplateList", new object[] {
                    parentid}, this.GetTemplateListOperationCompleted, userState);
        }

        private void OnGetTemplateListOperationCompleted(object arg)
        {
            if ((this.GetTemplateListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateListCompleted(this, new GetTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetTemplateById", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TemplateEntity GetTemplateById(string templateID)
        {
            object[] results = this.Invoke("GetTemplateById", new object[] {
                    templateID});
            return ((TemplateEntity)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTemplateById(string templateID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTemplateById", new object[] {
                    templateID}, callback, asyncState);
        }

        /// <remarks/>
        public TemplateEntity EndGetTemplateById(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TemplateEntity)(results[0]));
        }

        /// <remarks/>
        public void GetTemplateByIdAsync(string templateID)
        {
            this.GetTemplateByIdAsync(templateID, null);
        }

        /// <remarks/>
        public void GetTemplateByIdAsync(string templateID, object userState)
        {
            if ((this.GetTemplateByIdOperationCompleted == null))
            {
                this.GetTemplateByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateByIdOperationCompleted);
            }
            this.InvokeAsync("GetTemplateById", new object[] {
                    templateID}, this.GetTemplateByIdOperationCompleted, userState);
        }

        private void OnGetTemplateByIdOperationCompleted(object arg)
        {
            if ((this.GetTemplateByIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateByIdCompleted(this, new GetTemplateByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/AddTemplate", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTemplate(TemplateEntity templateEntity)
        {
            object[] results = this.Invoke("AddTemplate", new object[] {
                    templateEntity});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddTemplate(TemplateEntity templateEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddTemplate", new object[] {
                    templateEntity}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddTemplate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddTemplateAsync(TemplateEntity templateEntity)
        {
            this.AddTemplateAsync(templateEntity, null);
        }

        /// <remarks/>
        public void AddTemplateAsync(TemplateEntity templateEntity, object userState)
        {
            if ((this.AddTemplateOperationCompleted == null))
            {
                this.AddTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTemplateOperationCompleted);
            }
            this.InvokeAsync("AddTemplate", new object[] {
                    templateEntity}, this.AddTemplateOperationCompleted, userState);
        }

        private void OnAddTemplateOperationCompleted(object arg)
        {
            if ((this.AddTemplateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTemplateCompleted(this, new AddTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/UpdateTemplate", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTemplate(TemplateEntity templateEntity)
        {
            object[] results = this.Invoke("UpdateTemplate", new object[] {
                    templateEntity});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateTemplate(TemplateEntity templateEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateTemplate", new object[] {
                    templateEntity}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateTemplate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateTemplateAsync(TemplateEntity templateEntity)
        {
            this.UpdateTemplateAsync(templateEntity, null);
        }

        /// <remarks/>
        public void UpdateTemplateAsync(TemplateEntity templateEntity, object userState)
        {
            if ((this.UpdateTemplateOperationCompleted == null))
            {
                this.UpdateTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemplateOperationCompleted);
            }
            this.InvokeAsync("UpdateTemplate", new object[] {
                    templateEntity}, this.UpdateTemplateOperationCompleted, userState);
        }

        private void OnUpdateTemplateOperationCompleted(object arg)
        {
            if ((this.UpdateTemplateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemplateCompleted(this, new UpdateTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/DeleteTemplate", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTemplate(string templateID)
        {
            object[] results = this.Invoke("DeleteTemplate", new object[] {
                    templateID});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteTemplate(string templateID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteTemplate", new object[] {
                    templateID}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndDeleteTemplate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void DeleteTemplateAsync(string templateID)
        {
            this.DeleteTemplateAsync(templateID, null);
        }

        /// <remarks/>
        public void DeleteTemplateAsync(string templateID, object userState)
        {
            if ((this.DeleteTemplateOperationCompleted == null))
            {
                this.DeleteTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTemplateOperationCompleted);
            }
            this.InvokeAsync("DeleteTemplate", new object[] {
                    templateID}, this.DeleteTemplateOperationCompleted, userState);
        }

        private void OnDeleteTemplateOperationCompleted(object arg)
        {
            if ((this.DeleteTemplateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTemplateCompleted(this, new DeleteTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetConnectionDataTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetConnectionDataTable()
        {
            object[] results = this.Invoke("GetConnectionDataTable", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetConnectionDataTable(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetConnectionDataTable", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetConnectionDataTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetConnectionDataTableAsync()
        {
            this.GetConnectionDataTableAsync(null);
        }

        /// <remarks/>
        public void GetConnectionDataTableAsync(object userState)
        {
            if ((this.GetConnectionDataTableOperationCompleted == null))
            {
                this.GetConnectionDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionDataTableOperationCompleted);
            }
            this.InvokeAsync("GetConnectionDataTable", new object[0], this.GetConnectionDataTableOperationCompleted, userState);
        }

        private void OnGetConnectionDataTableOperationCompleted(object arg)
        {
            if ((this.GetConnectionDataTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionDataTableCompleted(this, new GetConnectionDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetConnectionList", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConnectionEntity[] GetConnectionList()
        {
            object[] results = this.Invoke("GetConnectionList", new object[0]);
            return ((ConnectionEntity[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetConnectionList(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetConnectionList", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public ConnectionEntity[] EndGetConnectionList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ConnectionEntity[])(results[0]));
        }

        /// <remarks/>
        public void GetConnectionListAsync()
        {
            this.GetConnectionListAsync(null);
        }

        /// <remarks/>
        public void GetConnectionListAsync(object userState)
        {
            if ((this.GetConnectionListOperationCompleted == null))
            {
                this.GetConnectionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionListOperationCompleted);
            }
            this.InvokeAsync("GetConnectionList", new object[0], this.GetConnectionListOperationCompleted, userState);
        }

        private void OnGetConnectionListOperationCompleted(object arg)
        {
            if ((this.GetConnectionListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionListCompleted(this, new GetConnectionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetConnectionById", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConnectionEntity GetConnectionById(string connectionID)
        {
            object[] results = this.Invoke("GetConnectionById", new object[] {
                    connectionID});
            return ((ConnectionEntity)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetConnectionById(string connectionID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetConnectionById", new object[] {
                    connectionID}, callback, asyncState);
        }

        /// <remarks/>
        public ConnectionEntity EndGetConnectionById(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ConnectionEntity)(results[0]));
        }

        /// <remarks/>
        public void GetConnectionByIdAsync(string connectionID)
        {
            this.GetConnectionByIdAsync(connectionID, null);
        }

        /// <remarks/>
        public void GetConnectionByIdAsync(string connectionID, object userState)
        {
            if ((this.GetConnectionByIdOperationCompleted == null))
            {
                this.GetConnectionByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionByIdOperationCompleted);
            }
            this.InvokeAsync("GetConnectionById", new object[] {
                    connectionID}, this.GetConnectionByIdOperationCompleted, userState);
        }

        private void OnGetConnectionByIdOperationCompleted(object arg)
        {
            if ((this.GetConnectionByIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionByIdCompleted(this, new GetConnectionByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/BatchUpdateConnection", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchUpdateConnection(System.Data.DataTable dt)
        {
            object[] results = this.Invoke("BatchUpdateConnection", new object[] {
                    dt});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBatchUpdateConnection(System.Data.DataTable dt, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BatchUpdateConnection", new object[] {
                    dt}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBatchUpdateConnection(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BatchUpdateConnectionAsync(System.Data.DataTable dt)
        {
            this.BatchUpdateConnectionAsync(dt, null);
        }

        /// <remarks/>
        public void BatchUpdateConnectionAsync(System.Data.DataTable dt, object userState)
        {
            if ((this.BatchUpdateConnectionOperationCompleted == null))
            {
                this.BatchUpdateConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUpdateConnectionOperationCompleted);
            }
            this.InvokeAsync("BatchUpdateConnection", new object[] {
                    dt}, this.BatchUpdateConnectionOperationCompleted, userState);
        }

        private void OnBatchUpdateConnectionOperationCompleted(object arg)
        {
            if ((this.BatchUpdateConnectionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUpdateConnectionCompleted(this, new BatchUpdateConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/AddConnection", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddConnection(ConnectionEntity connectionEntity)
        {
            object[] results = this.Invoke("AddConnection", new object[] {
                    connectionEntity});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddConnection(ConnectionEntity connectionEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddConnection", new object[] {
                    connectionEntity}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddConnection(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddConnectionAsync(ConnectionEntity connectionEntity)
        {
            this.AddConnectionAsync(connectionEntity, null);
        }

        /// <remarks/>
        public void AddConnectionAsync(ConnectionEntity connectionEntity, object userState)
        {
            if ((this.AddConnectionOperationCompleted == null))
            {
                this.AddConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConnectionOperationCompleted);
            }
            this.InvokeAsync("AddConnection", new object[] {
                    connectionEntity}, this.AddConnectionOperationCompleted, userState);
        }

        private void OnAddConnectionOperationCompleted(object arg)
        {
            if ((this.AddConnectionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConnectionCompleted(this, new AddConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/UpdateConnection", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateConnection(ConnectionEntity connectionEntity)
        {
            object[] results = this.Invoke("UpdateConnection", new object[] {
                    connectionEntity});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateConnection(ConnectionEntity connectionEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateConnection", new object[] {
                    connectionEntity}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateConnection(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateConnectionAsync(ConnectionEntity connectionEntity)
        {
            this.UpdateConnectionAsync(connectionEntity, null);
        }

        /// <remarks/>
        public void UpdateConnectionAsync(ConnectionEntity connectionEntity, object userState)
        {
            if ((this.UpdateConnectionOperationCompleted == null))
            {
                this.UpdateConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConnectionOperationCompleted);
            }
            this.InvokeAsync("UpdateConnection", new object[] {
                    connectionEntity}, this.UpdateConnectionOperationCompleted, userState);
        }

        private void OnUpdateConnectionOperationCompleted(object arg)
        {
            if ((this.UpdateConnectionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConnectionCompleted(this, new UpdateConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetDictDataTable", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDictDataTable(string dictCode)
        {
            object[] results = this.Invoke("GetDictDataTable", new object[] {
                    dictCode});
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDictDataTable(string dictCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDictDataTable", new object[] {
                    dictCode}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataTable EndGetDictDataTable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }

        /// <remarks/>
        public void GetDictDataTableAsync(string dictCode)
        {
            this.GetDictDataTableAsync(dictCode, null);
        }

        /// <remarks/>
        public void GetDictDataTableAsync(string dictCode, object userState)
        {
            if ((this.GetDictDataTableOperationCompleted == null))
            {
                this.GetDictDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictDataTableOperationCompleted);
            }
            this.InvokeAsync("GetDictDataTable", new object[] {
                    dictCode}, this.GetDictDataTableOperationCompleted, userState);
        }

        private void OnGetDictDataTableOperationCompleted(object arg)
        {
            if ((this.GetDictDataTableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictDataTableCompleted(this, new GetDictDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetDictList", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DictEntity[] GetDictList(string dictCode)
        {
            object[] results = this.Invoke("GetDictList", new object[] {
                    dictCode});
            return ((DictEntity[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDictList(string dictCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDictList", new object[] {
                    dictCode}, callback, asyncState);
        }

        /// <remarks/>
        public DictEntity[] EndGetDictList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DictEntity[])(results[0]));
        }

        /// <remarks/>
        public void GetDictListAsync(string dictCode)
        {
            this.GetDictListAsync(dictCode, null);
        }

        /// <remarks/>
        public void GetDictListAsync(string dictCode, object userState)
        {
            if ((this.GetDictListOperationCompleted == null))
            {
                this.GetDictListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictListOperationCompleted);
            }
            this.InvokeAsync("GetDictList", new object[] {
                    dictCode}, this.GetDictListOperationCompleted, userState);
        }

        private void OnGetDictListOperationCompleted(object arg)
        {
            if ((this.GetDictListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictListCompleted(this, new GetDictListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/GetDictByCode", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DictEntity GetDictByCode(string dictCode)
        {
            object[] results = this.Invoke("GetDictByCode", new object[] {
                    dictCode});
            return ((DictEntity)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDictByCode(string dictCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDictByCode", new object[] {
                    dictCode}, callback, asyncState);
        }

        /// <remarks/>
        public DictEntity EndGetDictByCode(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DictEntity)(results[0]));
        }

        /// <remarks/>
        public void GetDictByCodeAsync(string dictCode)
        {
            this.GetDictByCodeAsync(dictCode, null);
        }

        /// <remarks/>
        public void GetDictByCodeAsync(string dictCode, object userState)
        {
            if ((this.GetDictByCodeOperationCompleted == null))
            {
                this.GetDictByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictByCodeOperationCompleted);
            }
            this.InvokeAsync("GetDictByCode", new object[] {
                    dictCode}, this.GetDictByCodeOperationCompleted, userState);
        }

        private void OnGetDictByCodeOperationCompleted(object arg)
        {
            if ((this.GetDictByCodeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictByCodeCompleted(this, new GetDictByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/BatchUpdateDict", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BatchUpdateDict(System.Data.DataTable dt, string dictCode)
        {
            object[] results = this.Invoke("BatchUpdateDict", new object[] {
                    dt,
                    dictCode});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBatchUpdateDict(System.Data.DataTable dt, string dictCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BatchUpdateDict", new object[] {
                    dt,
                    dictCode}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBatchUpdateDict(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BatchUpdateDictAsync(System.Data.DataTable dt, string dictCode)
        {
            this.BatchUpdateDictAsync(dt, dictCode, null);
        }

        /// <remarks/>
        public void BatchUpdateDictAsync(System.Data.DataTable dt, string dictCode, object userState)
        {
            if ((this.BatchUpdateDictOperationCompleted == null))
            {
                this.BatchUpdateDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUpdateDictOperationCompleted);
            }
            this.InvokeAsync("BatchUpdateDict", new object[] {
                    dt,
                    dictCode}, this.BatchUpdateDictOperationCompleted, userState);
        }

        private void OnBatchUpdateDictOperationCompleted(object arg)
        {
            if ((this.BatchUpdateDictCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUpdateDictCompleted(this, new BatchUpdateDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/AddDict", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddDict(DictEntity DictEntity)
        {
            object[] results = this.Invoke("AddDict", new object[] {
                    DictEntity});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddDict(DictEntity DictEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddDict", new object[] {
                    DictEntity}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddDict(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddDictAsync(DictEntity DictEntity)
        {
            this.AddDictAsync(DictEntity, null);
        }

        /// <remarks/>
        public void AddDictAsync(DictEntity DictEntity, object userState)
        {
            if ((this.AddDictOperationCompleted == null))
            {
                this.AddDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDictOperationCompleted);
            }
            this.InvokeAsync("AddDict", new object[] {
                    DictEntity}, this.AddDictOperationCompleted, userState);
        }

        private void OnAddDictOperationCompleted(object arg)
        {
            if ((this.AddDictCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDictCompleted(this, new AddDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsh.codebuilderinterface/CodeBuilderService/UpdateDict", RequestNamespace = "http://wsh.codebuilderinterface/", ResponseNamespace = "http://wsh.codebuilderinterface/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDict(DictEntity DictEntity)
        {
            object[] results = this.Invoke("UpdateDict", new object[] {
                    DictEntity});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateDict(DictEntity DictEntity, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateDict", new object[] {
                    DictEntity}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateDict(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateDictAsync(DictEntity DictEntity)
        {
            this.UpdateDictAsync(DictEntity, null);
        }

        /// <remarks/>
        public void UpdateDictAsync(DictEntity DictEntity, object userState)
        {
            if ((this.UpdateDictOperationCompleted == null))
            {
                this.UpdateDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDictOperationCompleted);
            }
            this.InvokeAsync("UpdateDict", new object[] {
                    DictEntity}, this.UpdateDictOperationCompleted, userState);
        }

        private void OnUpdateDictOperationCompleted(object arg)
        {
            if ((this.UpdateDictCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDictCompleted(this, new UpdateDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public partial class ProjectEntity : Entity
    {

        private string projectNameField;

        private string nameSpaceField;

        private string attrField;

        private string remarkField;

        private int connectionIDField;

        private int templateIDField;

        /// <remarks/>
        public string ProjectName
        {
            get
            {
                return this.projectNameField;
            }
            set
            {
                this.projectNameField = value;
            }
        }

        /// <remarks/>
        public string NameSpace
        {
            get
            {
                return this.nameSpaceField;
            }
            set
            {
                this.nameSpaceField = value;
            }
        }

        /// <remarks/>
        public string Attr
        {
            get
            {
                return this.attrField;
            }
            set
            {
                this.attrField = value;
            }
        }

        /// <remarks/>
        public string Remark
        {
            get
            {
                return this.remarkField;
            }
            set
            {
                this.remarkField = value;
            }
        }

        /// <remarks/>
        public int ConnectionID
        {
            get
            {
                return this.connectionIDField;
            }
            set
            {
                this.connectionIDField = value;
            }
        }

        /// <remarks/>
        public int TemplateID
        {
            get
            {
                return this.templateIDField;
            }
            set
            {
                this.templateIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DictEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConnectionEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserInfoEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ColumnEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TableEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectEntity))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public partial class Entity
    {

        private int idField;

        private System.DateTime createTimeField;

        private System.DateTime editTimeField;

        /// <remarks/>
        public int ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CreateTime
        {
            get
            {
                return this.createTimeField;
            }
            set
            {
                this.createTimeField = value;
            }
        }

        /// <remarks/>
        public System.DateTime EditTime
        {
            get
            {
                return this.editTimeField;
            }
            set
            {
                this.editTimeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public partial class DictEntity : Entity
    {

        private string dictCodeField;

        private string dictNameField;

        private string dictValueField;

        private string attrField;

        /// <remarks/>
        public string DictCode
        {
            get
            {
                return this.dictCodeField;
            }
            set
            {
                this.dictCodeField = value;
            }
        }

        /// <remarks/>
        public string DictName
        {
            get
            {
                return this.dictNameField;
            }
            set
            {
                this.dictNameField = value;
            }
        }

        /// <remarks/>
        public string DictValue
        {
            get
            {
                return this.dictValueField;
            }
            set
            {
                this.dictValueField = value;
            }
        }

        /// <remarks/>
        public string Attr
        {
            get
            {
                return this.attrField;
            }
            set
            {
                this.attrField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public partial class ConnectionEntity : Entity
    {

        private string connectionNameField;

        private DataBaseType connectionTypeField;

        private string connectionStringField;

        /// <remarks/>
        public string ConnectionName
        {
            get
            {
                return this.connectionNameField;
            }
            set
            {
                this.connectionNameField = value;
            }
        }

        /// <remarks/>
        public DataBaseType ConnectionType
        {
            get
            {
                return this.connectionTypeField;
            }
            set
            {
                this.connectionTypeField = value;
            }
        }

        /// <remarks/>
        public string ConnectionString
        {
            get
            {
                return this.connectionStringField;
            }
            set
            {
                this.connectionStringField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public enum DataBaseType
    {

        /// <remarks/>
        SqlServer,

        /// <remarks/>
        Oracle,

        /// <remarks/>
        MySql,

        /// <remarks/>
        Access,

        /// <remarks/>
        SQLite,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public partial class TemplateEntity : Entity
    {

        private int parentIDField;

        private string templateNameField;

        private string fileExtensionsField;

        private string fileNameField;

        private string attrField;

        private string contentField;

        private string filePrefixField;

        /// <remarks/>
        public int ParentID
        {
            get
            {
                return this.parentIDField;
            }
            set
            {
                this.parentIDField = value;
            }
        }

        /// <remarks/>
        public string TemplateName
        {
            get
            {
                return this.templateNameField;
            }
            set
            {
                this.templateNameField = value;
            }
        }

        /// <remarks/>
        public string FileExtensions
        {
            get
            {
                return this.fileExtensionsField;
            }
            set
            {
                this.fileExtensionsField = value;
            }
        }

        /// <remarks/>
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        /// <remarks/>
        public string Attr
        {
            get
            {
                return this.attrField;
            }
            set
            {
                this.attrField = value;
            }
        }

        /// <remarks/>
        public string Content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }

        /// <remarks/>
        public string FilePrefix
        {
            get
            {
                return this.filePrefixField;
            }
            set
            {
                this.filePrefixField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public partial class UserInfoEntity : Entity
    {

        private string userNameField;

        private string realNameField;

        private string passwordField;

        private bool isAdminField;

        private string iPAddressField;

        private string macAddressField;

        private bool enabledField;

        private string emailField;

        /// <remarks/>
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }

        /// <remarks/>
        public string RealName
        {
            get
            {
                return this.realNameField;
            }
            set
            {
                this.realNameField = value;
            }
        }

        /// <remarks/>
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }

        /// <remarks/>
        public bool IsAdmin
        {
            get
            {
                return this.isAdminField;
            }
            set
            {
                this.isAdminField = value;
            }
        }

        /// <remarks/>
        public string IPAddress
        {
            get
            {
                return this.iPAddressField;
            }
            set
            {
                this.iPAddressField = value;
            }
        }

        /// <remarks/>
        public string MacAddress
        {
            get
            {
                return this.macAddressField;
            }
            set
            {
                this.macAddressField = value;
            }
        }

        /// <remarks/>
        public bool Enabled
        {
            get
            {
                return this.enabledField;
            }
            set
            {
                this.enabledField = value;
            }
        }

        /// <remarks/>
        public string Email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                this.emailField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public partial class ColumnEntity : Entity
    {

        private int tableIDField;

        private string fieldField;

        private string displayField;

        private string dataTypeField;

        private int lengthField;

        private EditorType editorTypeField;

        private bool sortableField;

        private bool queryableField;

        private bool hiddenField;

        private bool requiredField;

        private int widthField;

        private string formatStringField;

        private AlignType alignField;

        private string defaultValueField;

        private string remarkField;

        private int sortIDField;

        private bool enabledField;

        private bool isDataKeyField;

        private int precisionField;

        /// <remarks/>
        public int TableID
        {
            get
            {
                return this.tableIDField;
            }
            set
            {
                this.tableIDField = value;
            }
        }

        /// <remarks/>
        public string Field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }

        /// <remarks/>
        public string Display
        {
            get
            {
                return this.displayField;
            }
            set
            {
                this.displayField = value;
            }
        }

        /// <remarks/>
        public string DataType
        {
            get
            {
                return this.dataTypeField;
            }
            set
            {
                this.dataTypeField = value;
            }
        }

        /// <remarks/>
        public int Length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                this.lengthField = value;
            }
        }

        /// <remarks/>
        public EditorType EditorType
        {
            get
            {
                return this.editorTypeField;
            }
            set
            {
                this.editorTypeField = value;
            }
        }

        /// <remarks/>
        public bool Sortable
        {
            get
            {
                return this.sortableField;
            }
            set
            {
                this.sortableField = value;
            }
        }

        /// <remarks/>
        public bool Queryable
        {
            get
            {
                return this.queryableField;
            }
            set
            {
                this.queryableField = value;
            }
        }

        /// <remarks/>
        public bool Hidden
        {
            get
            {
                return this.hiddenField;
            }
            set
            {
                this.hiddenField = value;
            }
        }

        /// <remarks/>
        public bool Required
        {
            get
            {
                return this.requiredField;
            }
            set
            {
                this.requiredField = value;
            }
        }

        /// <remarks/>
        public int Width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                this.widthField = value;
            }
        }

        /// <remarks/>
        public string FormatString
        {
            get
            {
                return this.formatStringField;
            }
            set
            {
                this.formatStringField = value;
            }
        }

        /// <remarks/>
        public AlignType Align
        {
            get
            {
                return this.alignField;
            }
            set
            {
                this.alignField = value;
            }
        }

        /// <remarks/>
        public string DefaultValue
        {
            get
            {
                return this.defaultValueField;
            }
            set
            {
                this.defaultValueField = value;
            }
        }

        /// <remarks/>
        public string Remark
        {
            get
            {
                return this.remarkField;
            }
            set
            {
                this.remarkField = value;
            }
        }

        /// <remarks/>
        public int SortID
        {
            get
            {
                return this.sortIDField;
            }
            set
            {
                this.sortIDField = value;
            }
        }

        /// <remarks/>
        public bool Enabled
        {
            get
            {
                return this.enabledField;
            }
            set
            {
                this.enabledField = value;
            }
        }

        /// <remarks/>
        public bool IsDataKey
        {
            get
            {
                return this.isDataKeyField;
            }
            set
            {
                this.isDataKeyField = value;
            }
        }

        /// <remarks/>
        public int Precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public enum EditorType
    {

        /// <remarks/>
        TextBox,

        /// <remarks/>
        TextBoxLine,

        /// <remarks/>
        TextArea,

        /// <remarks/>
        RichTextBox,

        /// <remarks/>
        NumberBox,

        /// <remarks/>
        IntBox,

        /// <remarks/>
        UIntBox,

        /// <remarks/>
        DateBox,

        /// <remarks/>
        CheckBox,

        /// <remarks/>
        ComboBox,

        /// <remarks/>
        SearchBox,

        /// <remarks/>
        FileUpload,

        /// <remarks/>
        Template,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public enum AlignType
    {

        /// <remarks/>
        Left,

        /// <remarks/>
        Center,

        /// <remarks/>
        Right,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public partial class TableEntity : Entity
    {

        private int projectIDField;

        private string tableNameField;

        private string dataKeyField;

        private DataKeyType dataKeyTypeField;

        private string defaultSortNameField;

        private SortMode defaultSortModeField;

        private string attrField;

        private string remarkField;

        private bool enabledField;

        /// <remarks/>
        public int ProjectID
        {
            get
            {
                return this.projectIDField;
            }
            set
            {
                this.projectIDField = value;
            }
        }

        /// <remarks/>
        public string TableName
        {
            get
            {
                return this.tableNameField;
            }
            set
            {
                this.tableNameField = value;
            }
        }

        /// <remarks/>
        public string DataKey
        {
            get
            {
                return this.dataKeyField;
            }
            set
            {
                this.dataKeyField = value;
            }
        }

        /// <remarks/>
        public DataKeyType DataKeyType
        {
            get
            {
                return this.dataKeyTypeField;
            }
            set
            {
                this.dataKeyTypeField = value;
            }
        }

        /// <remarks/>
        public string DefaultSortName
        {
            get
            {
                return this.defaultSortNameField;
            }
            set
            {
                this.defaultSortNameField = value;
            }
        }

        /// <remarks/>
        public SortMode DefaultSortMode
        {
            get
            {
                return this.defaultSortModeField;
            }
            set
            {
                this.defaultSortModeField = value;
            }
        }

        /// <remarks/>
        public string Attr
        {
            get
            {
                return this.attrField;
            }
            set
            {
                this.attrField = value;
            }
        }

        /// <remarks/>
        public string Remark
        {
            get
            {
                return this.remarkField;
            }
            set
            {
                this.remarkField = value;
            }
        }

        /// <remarks/>
        public bool Enabled
        {
            get
            {
                return this.enabledField;
            }
            set
            {
                this.enabledField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public enum DataKeyType
    {

        /// <remarks/>
        IdEntity,

        /// <remarks/>
        Custom,

        /// <remarks/>
        Guid,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://wsh.codebuilderinterface/")]
    public enum SortMode
    {

        /// <remarks/>
        Asc,

        /// <remarks/>
        Desc,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetProjectDataTableCompletedEventHandler(object sender, GetProjectDataTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetProjectDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetProjectListCompletedEventHandler(object sender, GetProjectListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetProjectListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ProjectEntity[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ProjectEntity[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetProjectByIdCompletedEventHandler(object sender, GetProjectByIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetProjectByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ProjectEntity Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ProjectEntity)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddProjectCompletedEventHandler(object sender, AddProjectCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void UpdateProjectCompletedEventHandler(object sender, UpdateProjectCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DeleteProjectCompletedEventHandler(object sender, DeleteProjectCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTableDataTableCompletedEventHandler(object sender, GetTableDataTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetTableDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTableListCompletedEventHandler(object sender, GetTableListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetTableListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public TableEntity[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TableEntity[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTableByIdCompletedEventHandler(object sender, GetTableByIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetTableByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public TableEntity Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TableEntity)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTableByNameCompletedEventHandler(object sender, GetTableByNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetTableByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public TableEntity Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TableEntity)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ExistsTableNameCompletedEventHandler(object sender, ExistsTableNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsTableNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ExistsTableNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddTableCompletedEventHandler(object sender, AddTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void UpdateTableCompletedEventHandler(object sender, UpdateTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DeleteTableCompletedEventHandler(object sender, DeleteTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetColumnDataTableCompletedEventHandler(object sender, GetColumnDataTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetColumnDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetColumnDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetColumnListCompletedEventHandler(object sender, GetColumnListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetColumnListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetColumnListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ColumnEntity[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ColumnEntity[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void BatchUpdateColumnCompletedEventHandler(object sender, BatchUpdateColumnCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUpdateColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BatchUpdateColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddColumnCompletedEventHandler(object sender, AddColumnCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void UpdateColumnCompletedEventHandler(object sender, UpdateColumnCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public UserInfoEntity Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((UserInfoEntity)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetUserDataTableCompletedEventHandler(object sender, GetUserDataTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUserDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetUserListCompletedEventHandler(object sender, GetUserListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public UserInfoEntity[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((UserInfoEntity[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void BatchUpdateUserCompletedEventHandler(object sender, BatchUpdateUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BatchUpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ExistsUserCompletedEventHandler(object sender, ExistsUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ExistsUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTemplateDataTableCompletedEventHandler(object sender, GetTemplateDataTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetTemplateDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTemplateListCompletedEventHandler(object sender, GetTemplateListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public TemplateEntity[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TemplateEntity[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTemplateByIdCompletedEventHandler(object sender, GetTemplateByIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetTemplateByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public TemplateEntity Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TemplateEntity)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddTemplateCompletedEventHandler(object sender, AddTemplateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void UpdateTemplateCompletedEventHandler(object sender, UpdateTemplateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DeleteTemplateCompletedEventHandler(object sender, DeleteTemplateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetConnectionDataTableCompletedEventHandler(object sender, GetConnectionDataTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetConnectionDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetConnectionListCompletedEventHandler(object sender, GetConnectionListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetConnectionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ConnectionEntity[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ConnectionEntity[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetConnectionByIdCompletedEventHandler(object sender, GetConnectionByIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetConnectionByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ConnectionEntity Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ConnectionEntity)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void BatchUpdateConnectionCompletedEventHandler(object sender, BatchUpdateConnectionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUpdateConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BatchUpdateConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddConnectionCompletedEventHandler(object sender, AddConnectionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void UpdateConnectionCompletedEventHandler(object sender, UpdateConnectionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetDictDataTableCompletedEventHandler(object sender, GetDictDataTableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDictDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataTable Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetDictListCompletedEventHandler(object sender, GetDictListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDictListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DictEntity[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DictEntity[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetDictByCodeCompletedEventHandler(object sender, GetDictByCodeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDictByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DictEntity Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DictEntity)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void BatchUpdateDictCompletedEventHandler(object sender, BatchUpdateDictCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUpdateDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BatchUpdateDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddDictCompletedEventHandler(object sender, AddDictCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void UpdateDictCompletedEventHandler(object sender, UpdateDictCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}