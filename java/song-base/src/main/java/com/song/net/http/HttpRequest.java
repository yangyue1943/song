package com.song.net.http;import com.song.io.StreamHelper;import com.song.lang.ConvertHelper;import com.song.net.UrlHelper;import com.song.util.UUIDHelper;import javax.servlet.http.HttpServletRequest;import java.io.IOException;/** * description:     HttpRequest * author:          song * createDate:      2017/9/27 */public class HttpRequest {    protected HttpServletRequest request;    public HttpRequest(HttpServletRequest request) {        this.request = request;    }    public String getParamter(String key) {        return request.getParameter(key);    }    public int getIntParamter(String key, int defaultValue) {        String param = getParamter(key);        return ConvertHelper.toInt(param, defaultValue);    }    /**     * 获取参数，转换为int，转换失败则返回默认值     *     * @param key     * @return     */    public int getIntParamter(String key) {        return getIntParamter(key, 0);    }    /**     * 获取请求流中的内容，返回byte[]     *     * @return     * @throws IOException     */    public byte[] getBytes() throws IOException {        return StreamHelper.getBytes(request.getInputStream());    }    /**     * 获取请求流中的内容，返回String     *     * @return     * @throws IOException     */    public String getString() throws IOException {        return StreamHelper.getString(request.getInputStream());    }    /**     * 获取当前网站项目根目录     *     * @return     */    public String getBasePath() {        String webAppName = request.getContextPath();        return request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + webAppName + "/";    }    /**     * 获取目录的根路径     *     * @param path     * @return     */    public String getRealPath(String path) {        return request.getSession().getServletContext().getRealPath(path);    }    /**     * 判断请求是否来源于移动端     *     * @return     */    public boolean isMobile() {        return UrlHelper.isMobile(request.getHeader("user-agent"));    }    public boolean isMultipart() {        String contentType = request.getContentType();        return contentType.toLowerCase().startsWith("multipart/");    }}