package com.song.net.http;import com.song.io.FileHelper;import com.song.io.StreamHelper;import com.song.lang.StringHelper;import java.io.IOException;import java.io.OutputStream;import java.net.HttpURLConnection;import java.util.*;/** * description: * author:          song * createDate:      2017/9/28 */public class HttpMultipartConnection extends HttpConnection {    private HttpMultipart multipart;    public HttpMultipartConnection(String url) {        super(url);        multipart=new HttpMultipart();        this.setContentType(multipart.getContentType());    }    private List<HttpFile> files=new ArrayList<HttpFile>();    public void addFile(HttpFile file) {        files.add(file);    }    @Override    protected void write(HttpURLConnection connection) throws IOException {        if(params.size()>0 || files.size()>0){            OutputStream stream=null;            try {                stream=connection.getOutputStream();                //写入参数                Iterator iter = params.entrySet().iterator();                while (iter.hasNext()) {                    Map.Entry<String,String> entry = (Map.Entry<String,String>) iter.next();                    String des = multipart.getDisposition(entry.getKey());                    stream.write(StringHelper.getBytes(des));                    stream.write(StringHelper.getBytes(entry.getValue()));                }                //写入文件                for (HttpFile file : files) {                    String des = multipart.getDisposition(file.getFieldName(),file.getFilePath());                    stream.write(StringHelper.getBytes(des));                    stream.write(FileHelper.getBytes(file.getFilePath()));                }                stream.write(StringHelper.getBytes(multipart.getBoundaryEnd()));            } finally {                StreamHelper.close(stream);            }        }    }}